{exec} = require 'child_process'
{readdir, stat, unlink, readFileSync} = require 'fs'
{sep, basename, extname} = require 'path'

execute = (cmd, cb) ->
  console.log "> exec \"#{cmd.replace /"/g, '\"'}\""
  exec cmd, (err, stdout, stderr) ->
    if stdout? and stdout isnt ''
      console.log "~~STDOUT:\n#{stdout}\n~~"
    if stderr? and stderr isnt ''
      console.log "\n~~STDERR:\n#{stderr}\n~~"
    cb() if cb?

recurse = (dir, cb) ->
  result = []
  if basename(dir) is 'node_modules' or basename(dir) is '.git'
    return cb null, result
  if dir.substr(dir.length-1) isnt sep
    dir = dir + sep
  readdir dir, (err, files) ->
    if err? then return cb err, null
    temp = (i, file) ->
      if i is files.length then return cb null, result
      stat dir + file, (err, stats) ->
        if err? then return cb err, null
        if stats.isDirectory()
          recurse dir + file, (err, files2) ->
            if err? then return cb err, null
            result.push file for file in files2
            temp i+1, files[i+1]
        else
          result.push dir + file
          temp i+1, files[i+1]
    temp 0, files[0]

task 'build', 'Build project', ->
  execute "#{__dirname}/node_modules/.bin/coffee --compile --map --output #{__dirname}/build/ #{__dirname}/src/", ->
    execute "#{__dirname}/node_modules/.bin/coffee --compile --map #{__dirname}/views/index/", ->
      execute "#{__dirname}/node_modules/.bin/stylus #{__dirname}/views/index/"

task 'lint', 'Lint project', ->
  execute "#{__dirname}/node_modules/.bin/coffeelint #{__dirname}/views/index", ->
    execute "#{__dirname}/node_modules/.bin/coffeelint #{__dirname}/src", ->
      execute "#{__dirname}/node_modules/.bin/stylint #{__dirname}/views/index"

task 'clean', 'Clean generated files from project', ->
  recurse __dirname, (err, files) ->
    throw err if err?
    js = []
    css = []
    removable = []
    str = '// Generated by CoffeeScript'
    str2 = '/* originally a stylus file */'
    for file in files
      ext = extname(file)
      if ext is '.js' then js.push file
      if ext is '.map' then removable.push file
      if ext is '.css' then css.push file
    for file in js
      cont = String readFileSync file
      if cont.substr(0, str.length) is str
        removable.push file
    for file in css
      cont = String readFileSync file
      if cont.substr(0, str2.length) is str2
        removable.push file
    temp = (i) ->
      if i is removable.length then return console.log 'done.'
      unlink removable[i], (err) ->
        throw err if err?
        temp i+1
    temp 0
